// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/ForestMars/TerraformStation"
	"sync"
)

var (
	lockTerraformStationServiceMockTFCommand sync.RWMutex
)

// TerraformStationServiceMock is a mock implementation of TerraformStationService.
//
//     func TestSomethingThatUsesTerraformStationService(t *testing.T) {
//
//         // make and configure a mocked TerraformStationService
//         mockedTerraformStationService := &TerraformStationServiceMock{
//             TFCommandFunc: func(input *TerraformStation.TFCommandInput) (*TerraformStation.TFCommandResult, error) {
// 	               panic("TODO: mock out the TFCommand method")
//             },
//         }
//
//         // TODO: use mockedTerraformStationService in code that requires TerraformStationService
//         //       and then make assertions.
//
//     }
type TerraformStationServiceMock struct {
	// TFCommandFunc mocks the TFCommand method.
	TFCommandFunc func(input *TerraformStation.TFCommandInput) (*TerraformStation.TFCommandResult, error)

	// calls tracks calls to the methods.
	calls struct {
		// TFCommand holds details about calls to the TFCommand method.
		TFCommand []struct {
			// Input is the input argument value.
			Input *TerraformStation.TFCommandInput
		}
	}
}

// TFCommand calls TFCommandFunc.
func (mock *TerraformStationServiceMock) TFCommand(input *TerraformStation.TFCommandInput) (*TerraformStation.TFCommandResult, error) {
	if mock.TFCommandFunc == nil {
		panic("TerraformStationServiceMock.TFCommandFunc: method is nil but TerraformStationService.TFCommand was just called")
	}
	callInfo := struct {
		Input *TerraformStation.TFCommandInput
	}{
		Input: input,
	}
	lockTerraformStationServiceMockTFCommand.Lock()
	mock.calls.TFCommand = append(mock.calls.TFCommand, callInfo)
	lockTerraformStationServiceMockTFCommand.Unlock()
	return mock.TFCommandFunc(input)
}

// TFCommandCalls gets all the calls that were made to TFCommand.
// Check the length with:
//     len(mockedTerraformStationService.TFCommandCalls())
func (mock *TerraformStationServiceMock) TFCommandCalls() []struct {
	Input *TerraformStation.TFCommandInput
} {
	var calls []struct {
		Input *TerraformStation.TFCommandInput
	}
	lockTerraformStationServiceMockTFCommand.RLock()
	calls = mock.calls.TFCommand
	lockTerraformStationServiceMockTFCommand.RUnlock()
	return calls
}
